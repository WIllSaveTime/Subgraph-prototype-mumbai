// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ClosePosition extends ethereum.Event {
  get params(): ClosePosition__Params {
    return new ClosePosition__Params(this);
  }
}

export class ClosePosition__Params {
  _event: ClosePosition;

  constructor(event: ClosePosition) {
    this._event = event;
  }

  get key(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get productId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get currency(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get isLong(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get price(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get margin(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get pnl(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }

  get wasLiquidated(): boolean {
    return this._event.parameters[10].value.toBoolean();
  }
}

export class NewOrder extends ethereum.Event {
  get params(): NewOrder__Params {
    return new NewOrder__Params(this);
  }
}

export class NewOrder__Params {
  _event: NewOrder;

  constructor(event: NewOrder) {
    this._event = event;
  }

  get key(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get productId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get currency(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get isLong(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get margin(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get isClose(): boolean {
    return this._event.parameters[7].value.toBoolean();
  }
}

export class PositionUpdated extends ethereum.Event {
  get params(): PositionUpdated__Params {
    return new PositionUpdated__Params(this);
  }
}

export class PositionUpdated__Params {
  _event: PositionUpdated;

  constructor(event: PositionUpdated) {
    this._event = event;
  }

  get key(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get user(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get productId(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }

  get currency(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get isLong(): boolean {
    return this._event.parameters[4].value.toBoolean();
  }

  get margin(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get size(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get price(): BigInt {
    return this._event.parameters[7].value.toBigInt();
  }

  get fee(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }
}

export class Trading__getOrderResultOrderStruct extends ethereum.Tuple {
  get isClose(): boolean {
    return this[0].toBoolean();
  }

  get size(): BigInt {
    return this[1].toBigInt();
  }

  get margin(): BigInt {
    return this[2].toBigInt();
  }
}

export class Trading__getOrdersResult_ordersStruct extends ethereum.Tuple {
  get isClose(): boolean {
    return this[0].toBoolean();
  }

  get size(): BigInt {
    return this[1].toBigInt();
  }

  get margin(): BigInt {
    return this[2].toBigInt();
  }
}

export class Trading__getPositionResultPositionStruct extends ethereum.Tuple {
  get size(): BigInt {
    return this[0].toBigInt();
  }

  get margin(): BigInt {
    return this[1].toBigInt();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }
}

export class Trading__getPositionsResult_positionsStruct extends ethereum.Tuple {
  get size(): BigInt {
    return this[0].toBigInt();
  }

  get margin(): BigInt {
    return this[1].toBigInt();
  }

  get timestamp(): BigInt {
    return this[2].toBigInt();
  }

  get price(): BigInt {
    return this[3].toBigInt();
  }
}

export class Trading__getProductResultValue0Struct extends ethereum.Tuple {
  get maxLeverage(): BigInt {
    return this[0].toBigInt();
  }

  get liquidationThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get fee(): BigInt {
    return this[2].toBigInt();
  }

  get interest(): BigInt {
    return this[3].toBigInt();
  }
}

export class Trading extends ethereum.SmartContract {
  static bind(address: Address): Trading {
    return new Trading("Trading", address);
  }

  PRICE_DECIMALS(): BigInt {
    let result = super.call("PRICE_DECIMALS", "PRICE_DECIMALS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_PRICE_DECIMALS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "PRICE_DECIMALS",
      "PRICE_DECIMALS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  UNIT(): BigInt {
    let result = super.call("UNIT", "UNIT():(uint256)", []);

    return result[0].toBigInt();
  }

  try_UNIT(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("UNIT", "UNIT():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  UNIT_DECIMALS(): BigInt {
    let result = super.call("UNIT_DECIMALS", "UNIT_DECIMALS():(uint256)", []);

    return result[0].toBigInt();
  }

  try_UNIT_DECIMALS(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "UNIT_DECIMALS",
      "UNIT_DECIMALS():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getOrder(
    user: Address,
    currency: Address,
    productId: Bytes,
    isLong: boolean
  ): Trading__getOrderResultOrderStruct {
    let result = super.call(
      "getOrder",
      "getOrder(address,address,bytes32,bool):((bool,uint64,uint64))",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromAddress(currency),
        ethereum.Value.fromFixedBytes(productId),
        ethereum.Value.fromBoolean(isLong)
      ]
    );

    return changetype<Trading__getOrderResultOrderStruct>(result[0].toTuple());
  }

  try_getOrder(
    user: Address,
    currency: Address,
    productId: Bytes,
    isLong: boolean
  ): ethereum.CallResult<Trading__getOrderResultOrderStruct> {
    let result = super.tryCall(
      "getOrder",
      "getOrder(address,address,bytes32,bool):((bool,uint64,uint64))",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromAddress(currency),
        ethereum.Value.fromFixedBytes(productId),
        ethereum.Value.fromBoolean(isLong)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Trading__getOrderResultOrderStruct>(value[0].toTuple())
    );
  }

  getOrders(keys: Array<Bytes>): Array<Trading__getOrdersResult_ordersStruct> {
    let result = super.call(
      "getOrders",
      "getOrders(bytes32[]):((bool,uint64,uint64)[])",
      [ethereum.Value.fromFixedBytesArray(keys)]
    );

    return result[0].toTupleArray<Trading__getOrdersResult_ordersStruct>();
  }

  try_getOrders(
    keys: Array<Bytes>
  ): ethereum.CallResult<Array<Trading__getOrdersResult_ordersStruct>> {
    let result = super.tryCall(
      "getOrders",
      "getOrders(bytes32[]):((bool,uint64,uint64)[])",
      [ethereum.Value.fromFixedBytesArray(keys)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Trading__getOrdersResult_ordersStruct>()
    );
  }

  getPendingFee(currency: Address): BigInt {
    let result = super.call(
      "getPendingFee",
      "getPendingFee(address):(uint256)",
      [ethereum.Value.fromAddress(currency)]
    );

    return result[0].toBigInt();
  }

  try_getPendingFee(currency: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getPendingFee",
      "getPendingFee(address):(uint256)",
      [ethereum.Value.fromAddress(currency)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getPosition(
    user: Address,
    currency: Address,
    productId: Bytes,
    isLong: boolean
  ): Trading__getPositionResultPositionStruct {
    let result = super.call(
      "getPosition",
      "getPosition(address,address,bytes32,bool):((uint64,uint64,uint64,uint64))",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromAddress(currency),
        ethereum.Value.fromFixedBytes(productId),
        ethereum.Value.fromBoolean(isLong)
      ]
    );

    return changetype<Trading__getPositionResultPositionStruct>(
      result[0].toTuple()
    );
  }

  try_getPosition(
    user: Address,
    currency: Address,
    productId: Bytes,
    isLong: boolean
  ): ethereum.CallResult<Trading__getPositionResultPositionStruct> {
    let result = super.tryCall(
      "getPosition",
      "getPosition(address,address,bytes32,bool):((uint64,uint64,uint64,uint64))",
      [
        ethereum.Value.fromAddress(user),
        ethereum.Value.fromAddress(currency),
        ethereum.Value.fromFixedBytes(productId),
        ethereum.Value.fromBoolean(isLong)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Trading__getPositionResultPositionStruct>(value[0].toTuple())
    );
  }

  getPositions(
    keys: Array<Bytes>
  ): Array<Trading__getPositionsResult_positionsStruct> {
    let result = super.call(
      "getPositions",
      "getPositions(bytes32[]):((uint64,uint64,uint64,uint64)[])",
      [ethereum.Value.fromFixedBytesArray(keys)]
    );

    return result[0].toTupleArray<
      Trading__getPositionsResult_positionsStruct
    >();
  }

  try_getPositions(
    keys: Array<Bytes>
  ): ethereum.CallResult<Array<Trading__getPositionsResult_positionsStruct>> {
    let result = super.tryCall(
      "getPositions",
      "getPositions(bytes32[]):((uint64,uint64,uint64,uint64)[])",
      [ethereum.Value.fromFixedBytesArray(keys)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<Trading__getPositionsResult_positionsStruct>()
    );
  }

  getProduct(productId: Bytes): Trading__getProductResultValue0Struct {
    let result = super.call(
      "getProduct",
      "getProduct(bytes32):((uint64,uint64,uint64,uint64))",
      [ethereum.Value.fromFixedBytes(productId)]
    );

    return changetype<Trading__getProductResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getProduct(
    productId: Bytes
  ): ethereum.CallResult<Trading__getProductResultValue0Struct> {
    let result = super.tryCall(
      "getProduct",
      "getProduct(bytes32):((uint64,uint64,uint64,uint64))",
      [ethereum.Value.fromFixedBytes(productId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<Trading__getProductResultValue0Struct>(value[0].toTuple())
    );
  }

  nextCloseOrderId(): BigInt {
    let result = super.call(
      "nextCloseOrderId",
      "nextCloseOrderId():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_nextCloseOrderId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextCloseOrderId",
      "nextCloseOrderId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  nextPositionId(): BigInt {
    let result = super.call("nextPositionId", "nextPositionId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_nextPositionId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "nextPositionId",
      "nextPositionId():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  oracle(): Address {
    let result = super.call("oracle", "oracle():(address)", []);

    return result[0].toAddress();
  }

  try_oracle(): ethereum.CallResult<Address> {
    let result = super.tryCall("oracle", "oracle():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  router(): Address {
    let result = super.call("router", "router():(address)", []);

    return result[0].toAddress();
  }

  try_router(): ethereum.CallResult<Address> {
    let result = super.tryCall("router", "router():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AddProductCall extends ethereum.Call {
  get inputs(): AddProductCall__Inputs {
    return new AddProductCall__Inputs(this);
  }

  get outputs(): AddProductCall__Outputs {
    return new AddProductCall__Outputs(this);
  }
}

export class AddProductCall__Inputs {
  _call: AddProductCall;

  constructor(call: AddProductCall) {
    this._call = call;
  }

  get productId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _product(): AddProductCall_productStruct {
    return changetype<AddProductCall_productStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class AddProductCall__Outputs {
  _call: AddProductCall;

  constructor(call: AddProductCall) {
    this._call = call;
  }
}

export class AddProductCall_productStruct extends ethereum.Tuple {
  get maxLeverage(): BigInt {
    return this[0].toBigInt();
  }

  get liquidationThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get fee(): BigInt {
    return this[2].toBigInt();
  }

  get interest(): BigInt {
    return this[3].toBigInt();
  }
}

export class CancelOrderCall extends ethereum.Call {
  get inputs(): CancelOrderCall__Inputs {
    return new CancelOrderCall__Inputs(this);
  }

  get outputs(): CancelOrderCall__Outputs {
    return new CancelOrderCall__Outputs(this);
  }
}

export class CancelOrderCall__Inputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }

  get productId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get currency(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get isLong(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }
}

export class CancelOrderCall__Outputs {
  _call: CancelOrderCall;

  constructor(call: CancelOrderCall) {
    this._call = call;
  }
}

export class DistributeFeesCall extends ethereum.Call {
  get inputs(): DistributeFeesCall__Inputs {
    return new DistributeFeesCall__Inputs(this);
  }

  get outputs(): DistributeFeesCall__Outputs {
    return new DistributeFeesCall__Outputs(this);
  }
}

export class DistributeFeesCall__Inputs {
  _call: DistributeFeesCall;

  constructor(call: DistributeFeesCall) {
    this._call = call;
  }

  get currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class DistributeFeesCall__Outputs {
  _call: DistributeFeesCall;

  constructor(call: DistributeFeesCall) {
    this._call = call;
  }
}

export class LiquidatePositionCall extends ethereum.Call {
  get inputs(): LiquidatePositionCall__Inputs {
    return new LiquidatePositionCall__Inputs(this);
  }

  get outputs(): LiquidatePositionCall__Outputs {
    return new LiquidatePositionCall__Outputs(this);
  }
}

export class LiquidatePositionCall__Inputs {
  _call: LiquidatePositionCall;

  constructor(call: LiquidatePositionCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get productId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get currency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get isLong(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get price(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class LiquidatePositionCall__Outputs {
  _call: LiquidatePositionCall;

  constructor(call: LiquidatePositionCall) {
    this._call = call;
  }
}

export class ReleaseMarginCall extends ethereum.Call {
  get inputs(): ReleaseMarginCall__Inputs {
    return new ReleaseMarginCall__Inputs(this);
  }

  get outputs(): ReleaseMarginCall__Outputs {
    return new ReleaseMarginCall__Outputs(this);
  }
}

export class ReleaseMarginCall__Inputs {
  _call: ReleaseMarginCall;

  constructor(call: ReleaseMarginCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get productId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get currency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get isLong(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get includeFee(): boolean {
    return this._call.inputValues[4].value.toBoolean();
  }
}

export class ReleaseMarginCall__Outputs {
  _call: ReleaseMarginCall;

  constructor(call: ReleaseMarginCall) {
    this._call = call;
  }
}

export class SetMinMarginCall extends ethereum.Call {
  get inputs(): SetMinMarginCall__Inputs {
    return new SetMinMarginCall__Inputs(this);
  }

  get outputs(): SetMinMarginCall__Outputs {
    return new SetMinMarginCall__Outputs(this);
  }
}

export class SetMinMarginCall__Inputs {
  _call: SetMinMarginCall;

  constructor(call: SetMinMarginCall) {
    this._call = call;
  }

  get currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _minMargin(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetMinMarginCall__Outputs {
  _call: SetMinMarginCall;

  constructor(call: SetMinMarginCall) {
    this._call = call;
  }
}

export class SetOwnerCall extends ethereum.Call {
  get inputs(): SetOwnerCall__Inputs {
    return new SetOwnerCall__Inputs(this);
  }

  get outputs(): SetOwnerCall__Outputs {
    return new SetOwnerCall__Outputs(this);
  }
}

export class SetOwnerCall__Inputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetOwnerCall__Outputs {
  _call: SetOwnerCall;

  constructor(call: SetOwnerCall) {
    this._call = call;
  }
}

export class SetRouterCall extends ethereum.Call {
  get inputs(): SetRouterCall__Inputs {
    return new SetRouterCall__Inputs(this);
  }

  get outputs(): SetRouterCall__Outputs {
    return new SetRouterCall__Outputs(this);
  }
}

export class SetRouterCall__Inputs {
  _call: SetRouterCall;

  constructor(call: SetRouterCall) {
    this._call = call;
  }

  get _router(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetRouterCall__Outputs {
  _call: SetRouterCall;

  constructor(call: SetRouterCall) {
    this._call = call;
  }
}

export class SettleOrderCall extends ethereum.Call {
  get inputs(): SettleOrderCall__Inputs {
    return new SettleOrderCall__Inputs(this);
  }

  get outputs(): SettleOrderCall__Outputs {
    return new SettleOrderCall__Outputs(this);
  }
}

export class SettleOrderCall__Inputs {
  _call: SettleOrderCall;

  constructor(call: SettleOrderCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get productId(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get currency(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get isLong(): boolean {
    return this._call.inputValues[3].value.toBoolean();
  }

  get price(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class SettleOrderCall__Outputs {
  _call: SettleOrderCall;

  constructor(call: SettleOrderCall) {
    this._call = call;
  }
}

export class SubmitCloseOrderCall extends ethereum.Call {
  get inputs(): SubmitCloseOrderCall__Inputs {
    return new SubmitCloseOrderCall__Inputs(this);
  }

  get outputs(): SubmitCloseOrderCall__Outputs {
    return new SubmitCloseOrderCall__Outputs(this);
  }
}

export class SubmitCloseOrderCall__Inputs {
  _call: SubmitCloseOrderCall;

  constructor(call: SubmitCloseOrderCall) {
    this._call = call;
  }

  get productId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get currency(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get isLong(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get size(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }
}

export class SubmitCloseOrderCall__Outputs {
  _call: SubmitCloseOrderCall;

  constructor(call: SubmitCloseOrderCall) {
    this._call = call;
  }
}

export class SubmitOrderCall extends ethereum.Call {
  get inputs(): SubmitOrderCall__Inputs {
    return new SubmitOrderCall__Inputs(this);
  }

  get outputs(): SubmitOrderCall__Outputs {
    return new SubmitOrderCall__Outputs(this);
  }
}

export class SubmitOrderCall__Inputs {
  _call: SubmitOrderCall;

  constructor(call: SubmitOrderCall) {
    this._call = call;
  }

  get productId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get currency(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get isLong(): boolean {
    return this._call.inputValues[2].value.toBoolean();
  }

  get margin(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get size(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }
}

export class SubmitOrderCall__Outputs {
  _call: SubmitOrderCall;

  constructor(call: SubmitOrderCall) {
    this._call = call;
  }
}

export class UpdateProductCall extends ethereum.Call {
  get inputs(): UpdateProductCall__Inputs {
    return new UpdateProductCall__Inputs(this);
  }

  get outputs(): UpdateProductCall__Outputs {
    return new UpdateProductCall__Outputs(this);
  }
}

export class UpdateProductCall__Inputs {
  _call: UpdateProductCall;

  constructor(call: UpdateProductCall) {
    this._call = call;
  }

  get productId(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get _product(): UpdateProductCall_productStruct {
    return changetype<UpdateProductCall_productStruct>(
      this._call.inputValues[1].value.toTuple()
    );
  }
}

export class UpdateProductCall__Outputs {
  _call: UpdateProductCall;

  constructor(call: UpdateProductCall) {
    this._call = call;
  }
}

export class UpdateProductCall_productStruct extends ethereum.Tuple {
  get maxLeverage(): BigInt {
    return this[0].toBigInt();
  }

  get liquidationThreshold(): BigInt {
    return this[1].toBigInt();
  }

  get fee(): BigInt {
    return this[2].toBigInt();
  }

  get interest(): BigInt {
    return this[3].toBigInt();
  }
}
